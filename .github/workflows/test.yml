name: 'Test'

# **What it does**: Verify code is formatted and generated code is up-to-date and committed.
# **Why we have it**: To prevent drift from the generated code.

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  pull-requests: read

jobs:
  lint-generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Install moreutils (for sponge)
        run: sudo apt-get install -y moreutils

      - name: Terraform init
        run: terraform init -no-color
        working-directory: .github/generate

      - name: Terraform fmt
        run: terraform fmt -no-color -check
        working-directory: .github/generate

      - name: Terraform Apply
        run: terraform apply -no-color -auto-approve
        working-directory: .github/generate

      - name: Check for uncommitted changes
        run: git diff && git diff --quiet

  lint-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init
        run: terraform init -no-color
        working-directory: .github/deploy

      - name: Terraform fmt
        run: terraform fmt -no-color -check
        working-directory: .github/deploy

      - name: Check for uncommitted changes
        run: git diff && git diff --quiet

  deploy:
    runs-on: ubuntu-latest
    needs:
      - lint-generate
      - lint-deploy
    environment: ess-testing
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init
        run: terraform init -no-color
        working-directory: .github/deploy

      - name: Terraform Apply
        run: terraform apply -no-color -auto-approve
        working-directory: .github/deploy
        env:
          EC_API_KEY: ${{ secrets.EC_API_KEY }}

      - name: Persist terraform state
        uses: actions/upload-artifact@v3
        with:
          name: tfstate
          path: .github/deploy/terraform.tfstate*

  deploy-destroy:
    runs-on: ubuntu-latest
    if: ${{ success() || failure() }} # Always run cleanup.
    needs:
      - deploy
    environment: ess-testing
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init
        run: terraform init -no-color
        working-directory: .github/deploy

      - name: Restore terraform state
        uses: actions/download-artifact@v3
        with:
          name: tfstate
          path: .github/deploy/

      - name: Terraform Destroy
        run: terraform apply -destroy -no-color -auto-approve
        working-directory: .github/deploy
        env:
          EC_API_KEY: ${{ secrets.EC_API_KEY }}

# TODO: Add a test job that will:
#   Spin up Elastic Cloud.
#   Create agent policy.
#   Add winlog integration packages.
#   Get enrollment key.
#   Enroll a Windows Agent.
#   Verify data is ingested.
#   Tear down elastic cloud instance.
